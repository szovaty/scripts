#!/bin/bash
# vim:set ts=2:
# Based on template.src version 1.3 last modified 2017.01.24 by y
# Add your description here of the program here!

y_start(){ :; }
y_exit(){ :; }
y_help(){ :; }

trap y_exit TERM HUP INT

# Uncomment this to allow colors on the console
#USE_COLOR="yes"

# This will enable positioning of a text to the end (-8 char) 
# of a line independent of window size
USE_POS="yes"

# Enable bell for warnings and errors
USE_BELL="yes"

# Source the function library
FSH="y_functions.sh"
FUNCTIONS=`which $FSH`
test $? != '0' && { echo Fatal Error!; exit 1; }
test -r ${FUNCTIONS} && source ${FUNCTIONS}

# define the following to match the program current state
PROGRAM_NAME="yterms2_conf"
VERSION="1.0-rc2"
LAST_MOD="2018.01.10"

# Define log file here
LOG="/tmp/${0##*/}.log"

# Uncomment this if you need debug enabled
#Y_DEBUG="true"

TERM_CMD="xfce4-terminal"
TERM_OPT="--hide-borders --tab"
TERM_GEO="--geometry="
TERM_TITLE="yterms2"
WIN_NUM="5"
CONF_NAME="/tmp/yterms2.conf"
MODE="new"

# use these to set cleanup on exit
#MOUNTED=""		      # y_exit will unmount them
#DELETE_ON_EXIT=""	# y_exit will delete them
#LAST_CMD=""		    # y_exit will run it just before exit

y_start
# ===================================================================================

# read command line parameters
while [ -n "$1" ] ; do
	case $1 in
		--help|-h)	y_help "[Options]"; y_exit;;  #; Help
    --win|-w)   WIN_NUM=$2; shift;;           #; Number of windows [WIN_NUM]
    --conf|-c)  CONF_NAME=$2; shift;;         #; Define 'save as' name [CONF_NAME]
    --save|-s)  MODE="save";;                 #; Set save mode [MODE]
    --term|-t)  TERM_CMD=$2; shift;;          #; Define terminal command [TERM_CMD]
    --opt|-o)   TERM_OPT=$2; shift;;          #; Define terminal options [TERM_OPT]
	esac
	shift
done

# chech which windows we are running from
test "x" = "x" && {
  y_check_cmds "xprop awk"
  X=`xprop -root _NET_ACTIVE_WINDOW | awk -F" " '{print $5}'`
  COMMAND_WINID=${X%*,}
  y_debug 2 [$COMMAND_WINID]
}

test $MODE = "new" && {
  # open initial windows at default positions
  test $WIN_NUM -le 0 && { 
    y_info 2 "Windows number set to: $WIN_NUM. Exiting"
    y_exit
  }
  i=1
  while [ $i -le $WIN_NUM ]; do
    $TERM_CMD $TERM_OPT -T ${TERM_TITLE}_$i
    let i=i+1
  done

  # edit windows size and position
  y_info 0 "Position windows and type 'done' when finished"
  X=""
  while [ "$X" != "done" ]; do
    read X
  done
}

# read windows geometry info and save it to a config file
test $MODE = "new" && 
  WLIST=`wmctrl -l | grep $TERM_TITLE | awk '{print $1}'`
test $MODE = "save" && {
  DISP=`wmctrl -d | grep ' \* ' | awk '{print $1}'`
  for i in `wmctrl -lx | grep $TERM_CMD | awk -v d=$DISP '$2 == d {print $1}'`; do 
    WLIST="$WLIST $i"
  done
}

# save windows configuration
echo > $CONF_NAME

for i in $WLIST ; do
  X=`xwininfo -id $i -stats | grep "geometry"`
  X=${X#*geometry}
  GEO=${X#*' '}
  echo $TERM_CMD $TERM_OPT ${TERM_GEO}$GEO >> $CONF_NAME
done

chmod +x $CONF_NAME

# ===================================================================================
# Leave this as the last line
y_exit
