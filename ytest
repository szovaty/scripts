#!/bin/bash
# vim:set ts=2 sw=2:
# Base template.src version 1.4 last modified 2018.01.09 by y

y_start(){ :; }
y_exit(){ :; }
y_help(){ :; }

trap y_exit TERM HUP INT

# Source the function library
ylib () {
  FSH="y_bash_lib"
  LIB=`which $FSH`
  test $? != '0' && { echo Fatal Error!; exit 1; }
  test -r ${LIB} && source ${LIB}
}
ylib

# Uncomment this to allow colors on the console
USE_COLOR=$YES

# This will enable positioning of a text to the end (-8 char) 
# of a line independent of window size
USE_POS=$YES

# Enable bell for warnings and errors
#USE_BELL=$YES

# define the following to match the program current state
PROGRAM_NAME="ytest"
VERSION="0.1"
LAST_MOD="2018.01.16"

# Define log file here
LOG="/tmp/${0##*/}.log"

# Uncomment this if you need debug enabled
#Y_DEBUG=$TRUE

# use these to set cleanup on exit
#MOUNTED=""		# y_exit will unmount them
#DELETE_ON_EXIT=""	# y_exit will delete them
#LAST_CMD=""		# y_exit will run it just before exit

Y_QUIET=$FALSE
Y_CONFIRM=$TRUE
# destination options: LOG,STDOUT,STDERR,BOTH

ylib


HELP="Defaults"
y_start
# ===================================================================================

# read command line parameters
while [ -n "$1" ] ; do
  case $1 in
    --help|-h)	y_help "[Options]"; y_exit;;    #; Help screen [HELP]
    --test)     TEST=$TRUE;;                    #; [TEST]
    --noclean)  Y_NOCLEAN=$TRUE;;               #; Do not unmount before exit [Y_NOCLEAN]
    --quiet|-Q) Y_QUIET=$TRUE;;                 #; Enable quiet mode [Y_QUIET]
    --debug|-D) Y_DEBUG=$TRUE;;                 #; Enable debug mode [Y_DEBUG]
    --dry|-N)   Y_DRY_RUN=$TRUE;;               #; Execute dry run mode [Y_DRY_RUN]
    --nocolor)  USE_COLOR="";;                  #; Enable color output [USE_COLOR]
    --exit)     Y_EXIT_ON_ERROR=$TRUE;;         #; Exit on error [Y_EXIT_ON_ERROR]
    --edebug)   Y_DEBUG_ON_ERROR=$TRUE;;        #; Debug on error [Y_DEBUG_ON_ERROR]
    *)          y_fatal_error 2 "Unknown command";;
  esac
  shift
done

y_set_default Y_MSG_DEST "STDOUT,LOG"
y_set_default USE_COLOR $TRUE
y_set_default Y_DEBUG_ON_ERROR $FALSE
y_set_default Y_EXIT_ON_ERROR $FALSE

#y_mark_log -
#y_init_screen

test "x" = "xx" && {
  Y_MSG_DEST="LOG,STDERR"
  y_run 'echo `date` - Hello > /tmp/ytest.x'
  y_run grep xtest /etc/fstab
  y_run echo Hello World
}

test "x" = "xx" && {
  #set -o pipefail
  #Y_MSG_DEST="STDOUT"
  y_run chroot /xy /bin/bash -c '"cd /tmp; echo `date` - Hello > ytest.x"'
  y_run chroot /xy /bin/bash -c '"grep xtest /etc/fstab >/dev/null"'
  y_info Hello World
}

test "x" = "xx" && {
  y_progress_nl Testing...
  y_progress_end 2
  y_progress_nl Testing...
  y_progress_end 1

  X=$Y_DEBUG
  Y_DEBUG=$FALSE
  y_progress Loop Testing.
  for i in {0..5..1}; do 
    y_run echo -n .
    y_run sleep 1
  done
  Y_DEBUG=$X
  echo
  y_progress_end 0
}

test "x" = "x" && {
  y_info mount / umount testing
  y_mount /xos
  y_umount /xos
}

! y_dry_run && echo dry run

# ===================================================================================
# Leave this as the last line
y_exit
